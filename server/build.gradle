plugins {
    id 'java'
    id("com.github.gmazzo.buildconfig") version "5.6.5"
}

group = 'space.itoncek.trailcompass'
version = parent.version

String javalinVersion = "6.7.0"

repositories {
    mavenCentral()
}

String lombokVersion = "1.18.38"
String hibernateVersion = "7.0.0.Final"

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation ('io.javalin:javalin:' + javalinVersion)
    implementation 'org.json:json:20240303'
    implementation 'ch.qos.logback:logback-classic:1.5.16'
    // https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.5.1'
    implementation("com.github.kmehrunes:javalin-jwt:0.7.0")
    implementation('org.apache.commons:commons-lang3:3.18.0')
    implementation 'commons-codec:commons-codec:1.16.0'
    implementation("commons-io:commons-io:2.15.1")
    implementation('com.geodesk:geodesk:0.2.1')
    implementation 'com.google.code.gson:gson:2.11.0'

    implementation 'io.javalin.community.openapi:javalin-openapi-plugin:' + javalinVersion
    implementation 'io.javalin.community.openapi:javalin-swagger-plugin:' + javalinVersion
    annotationProcessor 'io.javalin.community.openapi:openapi-annotation-processor:' + javalinVersion

    compileOnly("org.projectlombok:lombok:$lombokVersion")
    implementation("org.hibernate.orm:hibernate-processor:$hibernateVersion")
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")
    implementation("org.hibernate.orm:hibernate-core:$hibernateVersion")
    implementation "org.hibernate.orm:hibernate-hikaricp:$hibernateVersion"
    annotationProcessor("org.hibernate.orm:hibernate-jpamodelgen:$hibernateVersion")
    implementation 'jakarta.transaction:jakarta.transaction-api:2.0.1'
    implementation 'org.postgresql:postgresql:42.7.7'
    implementation project(":commons")
}

jar {
    manifest {
        attributes 'Main-Class': 'space.itoncek.trailcompass.TrailServer', 'Implementation-Version': version
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    exclude("META-INF/*.RSA")
    exclude("META-INF/*.SF")
}

buildConfig {
    className("BuildMeta")
    useJavaOutput()
    buildConfigField(String, "APP_VERSION", project.version)
    buildConfigField(long, 'BUILD_TIME', System.currentTimeMillis())
}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility JavaVersion.VERSION_21
    targetCompatibility JavaVersion.VERSION_21
}